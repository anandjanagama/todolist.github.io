{"ast":null,"code":"const initialstate = {\n  list: []\n};\n\nconst reducers = (state = initialstate, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const {\n        id,\n        data\n      } = action.payload;\n\n      if (data) {\n        if (data.length > 2) {\n          return { ...state,\n            list: [...state.list, {\n              id: id,\n              data: data\n            }]\n          };\n        }\n      }\n\n    case \"DELETE\":\n      const newlist = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newlist\n      };\n\n    case \"DELETEALL\":\n      return { ...state,\n        list: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["E:/js/RJS/reduxtodolist/src/reducers/reducers.js"],"names":["initialstate","list","reducers","state","action","type","id","data","payload","length","newlist","filter","elem"],"mappings":"AACA,MAAMA,YAAY,GAAC;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAnB;;AAEA,MAAMC,QAAQ,GAAC,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAA8B;AACzC,UAAOA,MAAM,CAACC,IAAd;AACA,SAAK,KAAL;AACK,YAAM;AAACC,QAAAA,EAAD;AAAIC,QAAAA;AAAJ,UAAWH,MAAM,CAACI,OAAxB;;AACA,UAAGD,IAAH,EAAQ;AACJ,YAAGA,IAAI,CAACE,MAAL,GAAY,CAAf,EAAiB;AACd,iBAAM,EACF,GAAGN,KADD;AACOF,YAAAA,IAAI,EAAC,CACV,GAAGE,KAAK,CAACF,IADC,EACI;AAACK,cAAAA,EAAE,EAACA,EAAJ;AAAOC,cAAAA,IAAI,EAACA;AAAZ,aADJ;AADZ,WAAN;AAOF;AAEJ;;AAGN,SAAK,QAAL;AAAgB,YAAMG,OAAO,GAAEP,KAAK,CAACF,IAAN,CAAWU,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACN,EAAL,KAAYF,MAAM,CAACE,EAA7C,CAAf;AAChB,aAAO,EACH,GAAGH,KADA;AACOF,QAAAA,IAAI,EAAES;AADb,OAAP;;AAIA,SAAK,WAAL;AACA,aAAO,EACH,GAAGP,KADA;AACOF,QAAAA,IAAI,EAAE;AADb,OAAP;;AAGA;AAAS,aAAOE,KAAP;AA1BT;AA+BH,CAhCD;;AAiCA,eAAeD,QAAf","sourcesContent":["\r\nconst initialstate={list:[]\r\n};\r\nconst reducers=(state=initialstate, action)=>{\r\n    switch(action.type){\r\n    case \"ADD\" : \r\n         const {id,data}= action.payload;\r\n         if(data){\r\n             if(data.length>2){\r\n                return{ \r\n                    ...state,list:[\r\n                        ...state.list,{id:id,data:data}\r\n                    ]\r\n                \r\n                    \r\n                }\r\n             }\r\n            \r\n         }\r\n         \r\n    \r\n    case \"DELETE\" : const newlist= state.list.filter((elem)=>elem.id !== action.id);\r\n    return {\r\n        ...state, list: newlist,\r\n    }\r\n\r\n    case \"DELETEALL\" : \r\n    return {\r\n        ...state, list: [],\r\n    }\r\n    default: return state;\r\n\r\n}\r\n\r\n\r\n}\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}